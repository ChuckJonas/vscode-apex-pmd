name: Prepare Release

# See RELEASING.md

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'The version of the release, e.g. 0.6.2'
        required: true
        type: string
      nextVersion:
        description: 'The version of the next release, e.g. 0.6.3'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: master
        persist-credentials: true
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: Install npm dependencies
      run: npm ci
    - name: Set release version, tag, prepare next development version and push
      shell: bash
      run: |
        # configure git
        git config --local user.name "${GITHUB_ACTOR}"
        git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"

        RELEASE_DATE=$(date +%Y-%m-%d)

        npx json --in-place -f package.json -e "this.version=\"${RELEASE_VERSION}\""
        npm install

        sed -i "s/^## \[Unreleased\]/## [${RELEASE_VERSION}] - ${RELEASE_DATE}/" CHANGELOG.md
        sed -i "s;^\(\*\*Full Changelog\*\*: https://github.com/ChuckJonas/vscode-apex-pmd/compare/v[0-9]\+\.[0-9]\+\.[0-9]\+\.\.\.\)HEAD$;\1v${RELEASE_VERSION};" CHANGELOG.md

        git add --update
        git commit -m "v${RELEASE_VERSION}"
        git tag "v${RELEASE_VERSION}"

        npx json --in-place -f package.json -e "this.version=\"${NEXT_VERSION}-snapshot.0\""
        npm install

        START=$(grep -n -E "^## " CHANGELOG.md | head -1 | cut -d ':' -f 1)
        START=$((START - 1))
        INTRO=$(head -n "$START" CHANGELOG.md)
        REST=$(tail -n "+$START" CHANGELOG.md)
        echo "${INTRO}

        ## [Unreleased]

        ### Added
        ### Changed
        ### Deprecated
        ### Removed
        ### Fixed
        ### New Contributors

        **Full Changelog**: https://github.com/ChuckJonas/vscode-apex-pmd/compare/v${RELEASE_VERSION}...HEAD
        ${REST}" > CHANGELOG.md

        git add --update
        git commit -m "Prepare next development version v${NEXT_VERSION}"

        git push origin --atomic --follow-tags --tags HEAD:master
      env:
        RELEASE_VERSION: ${{ inputs.releaseVersion }}
        NEXT_VERSION: ${{ inputs.nextVersion }}
    - name: Build from tag v${{ inputs.releaseVersion }}
      shell: bash
      run: |
        git checkout "v${RELEASE_VERSION}"
        npm run vscode:package
      env:
        RELEASE_VERSION: ${{ inputs.releaseVersion }}
    - name: Prepare release notes
      id: release_notes
      shell: bash
      run: |
        START=$(grep -n -E "^## " CHANGELOG.md | head -2 | tail -1 | cut -d ':' -f 1)
        END=$(grep -n -E "^## " CHANGELOG.md | head -3 | tail -1 | cut -d ':' -f 1)
        RELEASE_NOTES=$(tail -n +$((START + 1)) CHANGELOG.md | head -n $((END - START - 1)))
        RELEASE_TITLE="${RELEASE_VERSION} - ${RELEASE_DATE}"

        {
          echo 'body<<EOF_RELEASE_NOTES_EOF'
          echo "${RELEASE_NOTES}"
          echo EOF_RELEASE_NOTES_EOF
        } >> $GITHUB_OUTPUT
        echo "title=${RELEASE_TITLE}" >> $GITHUB_OUTPUT
    - name: Create a draft release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ inputs.releaseVersion }}
        name: ${{ steps.release_notes.title }}
        body: ${{ steps.release_notes.body }}
        files: apex-pmd-${{ inputs.releaseVersion }}.vsix
        draft: true
